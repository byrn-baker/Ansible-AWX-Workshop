---
#### Cisco Tasks
- name: Cisco update interface description and admin status
  cisco.ios.ios_interfaces:
    config:
    - name: "{{ interface_id }}"
      description: "{{ description }}"
      enabled: "{{ enabled }}"   
    state: replaced
  when: ansible_network_os == 'ios'

- name: Cisco update interface mtu
  cisco.ios.ios_interfaces:
    config:
    - name: "{{ interface_id }}"
      mtu: "{{ mtu }}"      
    state: replaced
  when: 
    - "mtu != 'None'"
    - ansible_network_os == 'ios'

- name: Cisco update access vlan
  cisco.ios.ios_l2_interfaces:
    config:
    - name: "{{ interface_id }}"
      mode: "{{ mode }}"
      access:
        vlan: "{{ untagged_vlan }}"
    state: replaced  
  when: 
    - mode == 'access'
    - ansible_network_os == 'ios'

- name: Cisco udpate trunk vlans
  cisco.ios.ios_l2_interfaces:
    config:
    - name: "{{ interface_id }}"
      mode: "{{ mode | replace('tagged', 'trunk') }}"
      trunk:
        allowed_vlans: "{{ tagged_vlans }}"
        native_vlan: "{{ untagged_vlan }}"
    state: replaced
  when:
    - mode == 'tagged'
    - ansible_network_os == 'ios'

- name: Cisco updating dhcp helper or vrrp configuration
  cisco.ios.ios_config:
    src: l3_interface.j2
    save_when: always
  when:
    - label == 'Layer3'
    - ansible_network_os == 'ios'

#### Arista Tasks
- name: Arista removing l2 configuration
  arista.eos.eos_l2_interfaces:
    config:
    - name: "{{ interface_id }}"
    state: deleted
  when: 
    - "mode == ''"
    - "ansible_network_os == 'eos'"

- name: Arista Disable interface
  arista.eos.eos_config:
    lines:
    - shutdown
    parents: "interface {{ interface_id }}"
  when: 
    - "enabled == 'False'"
    - "ansible_network_os == 'eos'"

# - name: Arista Disable interface
#   arista.eos.eos_interfaces:
#     config:
#     - name: "{{ interface_id }}"
#       enabled: "False"
#     state: replaced
#   when: 
#     - "enabled == 'False'"
#     - "ansible_network_os == 'eos'"

- name: Arista Enable interface
  arista.eos.eos_interfaces:
    config:
    - name: "{{ interface_id }}"
      enabled: "True"
    state: replaced
  when: 
    - "enabled == 'True'"
    - "ansible_network_os == 'eos'"

- name: Arista update interface description
  arista.eos.eos_interfaces:
    config:
    - name: "{{ interface_id }}"
      description: "{{ description }}"
    state: replaced
  when: 
    - "description != ''"
    - "ansible_network_os == 'eos'"

- name: Arista update interface mtu
  arista.eos.eos_interfaces:
    config:
    - name: "{{ interface_id }}"
      mtu: "{{ mtu }}"
    state: replaced
  when: 
    - "mtu != 'None'"
    - "ansible_network_os == 'eos'"

- name: Arista update access vlan
  arista.eos.eos_l2_interfaces:
    config:
    - name: "{{ interface_id }}"
      mode: "{{ mode }}"
      access:
        vlan: "{{ untagged_vlan }}"
    state: replaced
  when: 
    - "mode == 'access'"
    - "ansible_network_os == 'eos'"

- name: Arista udpate trunk vlans
  arista.eos.eos_l2_interface:
    name: "{{ interface_id }}"
    mode: "{{ mode | replace('tagged', 'trunk') }}"
    trunk_allowed_vlans: "{{ tagged_vlans }}"
      # native_vlan: 666
  when:
    - "mode == 'tagged'"
    - "ansible_network_os == 'eos'"

#### Juniper Tasks
- name: Juniper removing l2 configuration
  junipernetworks.junos.junos_l2_interfaces:
    config:
    - name: "{{ interface_id }}"
    state: deleted
  when: 
    - "mode == ''"
    - "ansible_network_os == 'junos'"

- name: Juniper Disable interface
  junipernetworks.junos.junos_config:
    lines:
    - set interfaces {{ interface_id }} disable
  when: 
    - "enabled == 'False'"
    - "ansible_network_os == 'junos'"

- name: Juniper Enable interface
  junipernetworks.junos.junos_config:
    lines:
    - delete interfaces {{ interface_id }} disable
  when: 
    - "enabled == 'True'"
    - "ansible_network_os == 'junos'"

- name: Juniper update interface description
  junipernetworks.junos.junos_interfaces:
    config:
    - name: "{{ interface_id }}"
      description: "{{ description }}"
    state: merged
  when: 
    - "description != ''"
    - "ansible_network_os == 'junos'"

- name: Juniper update interface mtu
  junipernetworks.junos.junos_interfaces:
    config:
    - name: "{{ interface_id }}"
      mtu: "{{ mtu }}"
    state: merged
  when: 
    - "mtu != 'None'"
    - "ansible_network_os == 'junos'"

- name: Juniper update access vlan
  junipernetworks.junos.junos_l2_interfaces:
    config:
    - name: "{{ interface_id }}"
      mode: "{{ mode }}"
      access:
        vlan: "{{ untagged_vlan }}"
    state: merged
  when: 
    - "mode == 'access'"
    - "ansible_network_os == 'junos'"

- name: Juniper udpate trunk vlans
  junipernetworks.junos.junos_l2_interfaces:
    config:
      name: "{{ interface_id }}"
      mode: "{{ mode | replace('tagged', 'trunk') }}"
      trunk_allowed_vlans: "{{ tagged_vlans }}"
        # native_vlan: 666
    
  when:
    - "mode == 'tagged'"
    - "ansible_network_os == 'junos'"