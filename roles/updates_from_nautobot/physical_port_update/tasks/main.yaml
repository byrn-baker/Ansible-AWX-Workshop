---
#### Cisco Tasks
- name: update interface description and admin status
  cisco.ios.ios_interfaces:
    config:
    - name: "{{ interface_id }}"
      description: "{{ description }}"
      enabled: "{{ enabled }}"   
    state: replaced
  when: ansible_network_os == 'ios'

- name: update interface mtu
  cisco.ios.ios_interfaces:
    config:
    - name: "{{ interface_id }}"
      mtu: "{{ mtu }}"      
    state: replaced
  when: 
    - mtu != None
    - ansible_network_os == 'ios'

- name: update access vlan
  cisco.ios.ios_l2_interfaces:
    config:
    - name: "{{ interface_id }}"
      mode: "{{ mode }}"
      access:
        vlan: "{{ untagged_vlan }}"
    state: replaced  
  when: 
    - mode == 'access'
    - ansible_network_os == 'ios'

- name: udpate trunk vlans
  cisco.ios.ios_l2_interfaces:
    config:
    - name: "{{ interface_id }}"
      mode: "{{ mode | replace('tagged', 'trunk') }}"
      trunk:
        allowed_vlans: "{{ tagged_vlans }}"
        native_vlan: "{{ untagged_vlan }}"
    state: replaced
  when:
    - mode == 'tagged'
    - ansible_network_os == 'ios'

- name: updating L3 configuration
  cisco.ios.ios_config:
    src: l3_interface.j2
    save_when: always
  when:
    - label == 'Layer3'
    - ansible_network_os == 'ios'

#### Arista Tasks
- name: update interface description and admin status
  arista.eos.eos_interfaces:
    config:
    - name: "{{ interface_id }}"
      description: "{{ description }}"
      enabled: "{{ enabled }}"
    state: replaced
  when: "ansible_network_os == 'eos'"

- name: update interface mtu
  arista.eos.eos_interface:
    config:
    - name: "{{ interface_id }}"
      mtu: "{{ mtu }}"
    state: replaced
  when: 
    - "mtu != None"
    - "ansible_network_os == 'eos'"

- name: update access vlan
  arista.eos.eos_l2_interface:
    config:
    - name: "{{ interface_id }}"
      mode: "{{ mode }}"
      access_vlan: "{{ untagged_vlan }}"
    state: replaced
  when: 
    - "mode == 'access'"
    - "ansible_network_os == 'eos'"

- name: udpate trunk vlans
  arista.eos.eos_l2_interface:
    config:
    - name: "{{ interface_id }}"
      mode: "{{ mode | replace('tagged', 'trunk') }}"
      trunk_allowed_vlans: "{{ tagged_vlans }}"
      native_vlan: "{{ untagged_vlan }}"
    state: replaced
  when:
    - "mode == 'tagged'"
    - "ansible_network_os == 'eos'"